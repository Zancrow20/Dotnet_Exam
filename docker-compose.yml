services:
  postgres-db:
    image: postgres:alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: dotnet_postgres_db
      POSTGRES_USER: superCoolUserName
      POSTGRES_PASSWORD: superCoolUserPassword138
    ports:
      - '5450:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
  
  mongo-db:
    image: mongo
    container_name: mongo-db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
  
  web-api:
    image: web-api
    container_name: web-api
    build:
      context: ./Server
      dockerfile: /WebApi/Dockerfile
    ports:
      - "8000:8080"
    depends_on:
      - postgres-db
      - mongo-db
    environment:
      ASPNETCORE_ENVIRONMENT : Development
      ASPNETCORE_HTTP_PORTS : 8080
      ConnectionStrings__DefaultConnection : Server=postgres-db;Port=5432;Database=dotnet_postgres_db;User Id=superCoolUserName;Password=superCoolUserPassword138;
      MongoDb__ConnectionString: mongodb://mongo-db:27017
      MongoDb__DatabaseName: RatingDb
      MondoDb__CollectionName: Rating
        
  exam-front:
    image: exam-front
    container_name: exam-front
    build:
      context: ./exam-front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .hostnames
    depends_on:
      - web-api

volumes:
  mongo_data:
  postgres_data: